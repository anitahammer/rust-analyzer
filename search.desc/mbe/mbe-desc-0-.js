searchState.loadedDescShard("mbe", 0, "<code>mbe</code> (short for Macro By Example) crate contains code for …\nThis struct contains AST for a single <code>macro_rules</code> …\nDoc comment desugaring differs between mbe and proc-macros.\nEdge case 2 – eager macros expand their input to a …\nIndex of the matched macro arm on successful expansion.\nDesugars doc comments as quoted raw strings\nEdge case – macros generally don’t expand to …\nNo value.\nDesugars doc comments as quoted strings\nSome value of type <code>T</code>.\nParse the whole of the input as a given syntactic …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSplit token tree with separate expr: $($e:expr)SEP*\nThe new, unstable <code>macro m {}</code> flavor.\nThe old, <code>macro_rules! m {}</code> flavor.\nConvert a string to a <code>TokenTree</code>. The spans of the subtree …\nConvert a string to a <code>TokenTree</code>. The passed span will be …\nConverts a syntax tree to a <code>tt::Subtree</code> using the provided …\nConverts a syntax tree to a <code>tt::Subtree</code> using the provided …\nConverts a <code>tt::Subtree</code> back to a <code>SyntaxNode</code>. The produced …")