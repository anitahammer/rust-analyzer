searchState.loadedDescShard("parser", 0, "The Rust parser.\nInput for the parser – a sequence of tokens.\nEdge case 2 – eager macros expand their input to a …\nEdge case – macros generally don’t expand to …\nOutput of the parser – a DFS traversal of a concrete …\nParse a prefix of the input as a given syntactic construct.\nA parsing function for a specific braced-block.\nThe kind of syntax node, e.g. <code>IDENT</code>, <code>USE_KW</code>, or <code>STRUCT</code>.\nParse the whole of the input as a given syntactic …\nIf the node is a braced block, return the corresponding …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nNB: only valid to call with Output from …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRe-parse given tokens using this <code>Reparser</code>.\nSets jointness for the last token we’ve pushed.")